<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Pop Cinema</title>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body>
    <header class="main-header">
        <div class="container">
            <div class="logo">
                <a href="/Clients/Home/Index">
                    <img src="/assets/EatPop.png" alt="Pop Cinema Logo" class="logo-img" />
                    Pop Cinema
                </a>
            </div>
            <nav>
                <ul class="nav-links d-flex flex-grow-1">
                    <li><a href="/Clients/Home/Index">Home</a></li>
                    <li><a href="/Clients/Movies/Index">Movies</a></li>
                    <li><a href="/Clients/Home/Actors">Actors</a></li>
                </ul>
            </nav>
            @using System.Security.Claims
            @{
                var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
            }

            <ul class="navbar-nav me-auto mb-2 mb-lg-0 ms-lg-4">

                @if (User is not null && User.Identity.IsAuthenticated)
                {

                    <li class="nav-item"><a class="nav-link" href="/Identity/Account/SignOut">Logout</a></li>
                    <li class="nav-item"><a class="nav-link" href="/Identity/Profile/Index/@userId">Welcome @User.Identity.Name</a></li>
                }
                else
                {
                    <li class="nav-item"><a class="nav-link" href="/Identity/Account/Login">Login</a></li>
                    <li class="nav-item"><a class="nav-link" href="/Identity/Account/Register">Register</a></li>
                }

            </ul>   
            <form class="search-bar" method="get" action="/Clients/Movies/Search">
                <input type="text" name="query" placeholder="Search movies..." />
                <button type="submit">🔍</button>
            </form>
        </div>
    </header>

    @if (Context.Request.Path == "/Clients/Home/Index")
    {
        @await Component.InvokeAsync("Slider")
    }

    <main class="main-content">
        @RenderBody()
    </main>

    <footer class="main-footer">
        <div class="container">
            <p>&copy; 2025 PoP Cinema. All rights reserved.</p>
        </div>
    </footer>

    @RenderSection("Scripts", required: false)

    <!-- SVG Decorations -->
    <div id="svg-decor-container">
        <!-- Blob 1 -->
        <svg class="decor-svg blob blob1" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
            <path fill="#B30000" fill-opacity="0.06"
                  d="M43.4,-69.7C56.6,-60.9,67.7,-47.6,75.6,-32.9C83.5,-18.1,88.2,-2,85.5,13.9C82.7,29.9,72.6,45.7,59,58.4C45.3,71.1,28.1,80.7,10.4,80.5C-7.3,80.4,-25.6,70.6,-40.7,59.4C-55.8,48.3,-67.8,35.8,-73.2,20.7C-78.6,5.6,-77.5,-11.9,-71.1,-28.1C-64.8,-44.2,-53.2,-58.9,-38.7,-67.8C-24.2,-76.8,-7.1,-80,8.3,-75.3C23.8,-70.7,37.3,-58.6,43.4,-69.7Z"
                  transform="translate(100 100)" />
        </svg>

        <!-- Blob 2 -->
        <svg class="decor-svg blob blob2" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
            <path fill="#F5C6CB" fill-opacity="0.05"
                  d="M43.4,-69.7C56.6,-60.9,67.7,-47.6,75.6,-32.9C83.5,-18.1,88.2,-2,85.5,13.9C82.7,29.9,72.6,45.7,59,58.4C45.3,71.1,28.1,80.7,10.4,80.5C-7.3,80.4,-25.6,70.6,-40.7,59.4C-55.8,48.3,-67.8,35.8,-73.2,20.7C-78.6,5.6,-77.5,-11.9,-71.1,-28.1C-64.8,-44.2,-53.2,-58.9,-38.7,-67.8C-24.2,-76.8,-7.1,-80,8.3,-75.3C23.8,-70.7,37.3,-58.6,43.4,-69.7Z"
                  transform="translate(100 100)" />
        </svg>

        <!-- Dots -->
        <svg class="decor-svg dots" width="200" height="200">
            <defs>
                <pattern id="dot-pattern" x="0" y="0" width="20" height="20" patternUnits="userSpaceOnUse">
                    <circle cx="3" cy="3" r="2" fill="#B30000" opacity="0.1" />
                </pattern>
            </defs>
            <rect width="100%" height="100%" fill="url(#dot-pattern)" />
        </svg>

        <!-- Wave -->
        <svg class="decor-svg wave" viewBox="0 0 1440 320" xmlns="http://www.w3.org/2000/svg">
            <path fill="#B30000" fill-opacity="0.03"
                  d="M0,160L60,170C120,180,240,200,360,197.3C480,195,600,169,720,160C840,151,960,165,1080,176C1200,187,1320,197,1380,202.7L1440,208V320H0Z" />
        </svg>
    </div>

    <script>
        window.addEventListener('DOMContentLoaded', () => {
            const svgs = document.querySelectorAll('.decor-svg');
            svgs.forEach(svg => {
                if (Math.random() < 0.3) {
                    svg.style.display = 'none'; // Randomly hide some
                }
            });
        });
    </script>
</body>
</html>
