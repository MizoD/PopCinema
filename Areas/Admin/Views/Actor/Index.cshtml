@model ActorsWithDirectorsVM

@{
    ViewData["Title"] = "Actor List";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold">🎭 Actor Management</h2>
        @if (User.IsInRole(SD.SuperAdmin) || User.IsInRole(SD.Admin))
        {
            <a asp-action="Create" class="btn btn-danger rounded-pill px-4 shadow">+ Add Actor</a>
        }
    </div>

    <!-- 🔍 Search Bar -->
    <div class="mb-4">
        <input type="text" id="searchInput" class="form-control form-control-lg rounded-pill shadow-sm" placeholder="Search actor by name...">
    </div>

    <div class="row g-4 fade-in-container" id="actorCards">
        @foreach (var actor in Model.Actors)
        {
            <div class="col-md-6 col-lg-4 actor-card" data-name="@actor.FullName.ToLower()">
                <div class="card h-100 shadow-lg border-0 rounded-4 overflow-hidden transition-card">
                    <div class="card-body p-4">
                        <div class="d-flex align-items-center mb-3">
                            <img src="@actor.PhotoUrl" alt="@actor.FullName" class="rounded-circle me-3" style="width: 60px; height: 60px; object-fit: cover; border: 2px solid #dee2e6;">
                            <div>
                                <h5 class="fw-semibold mb-0">@actor.FullName</h5>
                                <small class="text-muted">@actor.PhoneNumber</small>
                            </div>
                        </div>
                        <p class="text-muted small mb-0">@actor.Bio</p>
                    </div>
                    @if (User.IsInRole(SD.SuperAdmin) || User.IsInRole(SD.Admin))
                    {
                    <div class="card-footer bg-light border-0 d-flex justify-content-between px-4 py-3">
                        <a asp-action="Edit" asp-route-id="@actor.Id" class="btn btn-sm btn-outline-warning  btn-sm rounded-pill px-3">✏️ Edit</a>

                        <button class="btn btn-outline-danger btn-sm rounded-pill px-3" data-bs-toggle="modal" data-bs-target="#deleteModal" data-id="@actor.Id" data-name="@actor.FullName">
                            🗑️  Delete
                        </button>
                    </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

<!-- Pagination -->
<div class="pagination-wrapper mt-5">
    <nav>
        <ul class="pagination justify-content-center flex-wrap custom-pagination">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="?page=@(Model.CurrentPage - 1)">« Prev</a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="?page=@i">@i</a>
                </li>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="?page=@(Model.CurrentPage + 1)">Next »</a>
                </li>
            }
        </ul>
    </nav>
</div>
    

<!-- 🗑️ Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow rounded-4">
            <div class="modal-header bg-danger text-white rounded-top-4">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete <strong id="actorName"></strong>?
            </div>
            <div class="modal-footer">
                <form id="deleteForm" method="post">
                    <button type="button" class="btn btn-secondary rounded-pill px-4" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger rounded-pill px-4">Yes, Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .transition-card {
        transition: all 0.3s ease-in-out;
    }

        .transition-card:hover {
            transform: scale(1.02);
            box-shadow: 0 0 25px rgba(0, 0, 0, 0.08);
        }

    .fade-in-container .actor-card {
        opacity: 0;
        transform: translateY(20px);
        animation: fadeInUp 0.5s ease-in-out forwards;
    }

        .fade-in-container .actor-card:nth-child(1) {
            animation-delay: 0.1s;
        }

        .fade-in-container .actor-card:nth-child(2) {
            animation-delay: 0.2s;
        }

        .fade-in-container .actor-card:nth-child(3) {
            animation-delay: 0.3s;
        }

    @@keyframes fadeInUp {
        to

    {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .pagination-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        padding-top: 30px;
    }

    .custom-pagination .page-link {
        color: #B30000;
        font-weight: 500;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 0.4rem 0.9rem;
        background-color: #fff;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
    }

        .custom-pagination .page-link:hover {
            background-color: rgba(179, 0, 0, 0.1);
            border-color: #B30000;
            color: #B30000;
        }

    .custom-pagination .page-item.active .page-link {
        background-color: #B30000;
        color: white;
        border-color: #B30000;
        box-shadow: 0 3px 10px rgba(179, 0, 0, 0.3);
    }
</style>

@section Scripts {
    <script>
        // 🔍 Filter Cards by Name
        document.getElementById("searchInput").addEventListener("input", function () {
            const val = this.value.toLowerCase();
            document.querySelectorAll(".actor-card").forEach(card => {
                const name = card.getAttribute("data-name");
                card.style.display = name.includes(val) ? "block" : "none";
            });
        });

        // 🗑️ Modal Logic
        const deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const actorId = button.getAttribute('data-id');
            const actorName = button.getAttribute('data-name');

            deleteModal.querySelector('#actorName').textContent = actorName;
            deleteModal.querySelector('#deleteForm').action = `/Admin/Actor/Delete/${actorId}`;
        });
    </script>
}
